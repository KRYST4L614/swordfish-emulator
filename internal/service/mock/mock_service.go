// Code generated by MockGen. DO NOT EDIT.
// Source: gitlab.com/IgorNikiforov/swordfish-emulator-go/internal/service (interfaces: ServiceRootService)
//
// Generated by this command:
//
//	mockgen --build_flags=--mod=mod -destination mock/mock_service.go . ServiceRootService
//

// Package mock_service is a generated GoMock package.
package mock_service

import (
	context "context"
	reflect "reflect"

	domain "gitlab.com/IgorNikiforov/swordfish-emulator-go/internal/domain"
	gomock "go.uber.org/mock/gomock"
)

// MockServiceRootService is a mock of ServiceRootService interface.
type MockServiceRootService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceRootServiceMockRecorder
}

// MockServiceRootServiceMockRecorder is the mock recorder for MockServiceRootService.
type MockServiceRootServiceMockRecorder struct {
	mock *MockServiceRootService
}

// NewMockServiceRootService creates a new mock instance.
func NewMockServiceRootService(ctrl *gomock.Controller) *MockServiceRootService {
	mock := &MockServiceRootService{ctrl: ctrl}
	mock.recorder = &MockServiceRootServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockServiceRootService) EXPECT() *MockServiceRootServiceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockServiceRootService) Create(arg0 context.Context, arg1 *domain.ServiceRootV1161ServiceRoot) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockServiceRootServiceMockRecorder) Create(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockServiceRootService)(nil).Create), arg0, arg1)
}

// Get mocks base method.
func (m *MockServiceRootService) Get(arg0 context.Context, arg1 string) (*domain.ServiceRootV1161ServiceRoot, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].(*domain.ServiceRootV1161ServiceRoot)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockServiceRootServiceMockRecorder) Get(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockServiceRootService)(nil).Get), arg0, arg1)
}
